<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.gccoffee.Service.OrderServiceImplTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2022-10-07T03:06:02" hostname="igyeong-wons-MacBook-Pro.local" time="0.332">
  <properties/>
  <testcase name="가격 테스트" classname="com.example.gccoffee.Service.OrderServiceImplTest" time="0.247"/>
  <testcase name="주문 테스트" classname="com.example.gccoffee.Service.OrderServiceImplTest" time="0.043"/>
  <testcase name="주문 취소 테스트" classname="com.example.gccoffee.Service.OrderServiceImplTest" time="0.012"/>
  <testcase name="주문 일괄 처리 테스트" classname="com.example.gccoffee.Service.OrderServiceImplTest" time="0.023"/>
  <testcase name="재고 테스트" classname="com.example.gccoffee.Service.OrderServiceImplTest" time="0.004"/>
  <system-out><![CDATA[12:05:59.514 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
12:05:59.520 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
12:05:59.533 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.example.gccoffee.Service.OrderServiceImplTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
12:05:59.544 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.gccoffee.Service.OrderServiceImplTest], using SpringBootContextLoader
12:05:59.546 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.gccoffee.Service.OrderServiceImplTest]: class path resource [com/example/gccoffee/Service/OrderServiceImplTest-context.xml] does not exist
12:05:59.546 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.example.gccoffee.Service.OrderServiceImplTest]: class path resource [com/example/gccoffee/Service/OrderServiceImplTestContext.groovy] does not exist
12:05:59.546 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.example.gccoffee.Service.OrderServiceImplTest]: no resource found for suffixes {-context.xml, Context.groovy}.
12:05:59.546 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.example.gccoffee.Service.OrderServiceImplTest]: OrderServiceImplTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
12:05:59.564 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.example.gccoffee.Service.OrderServiceImplTest]
12:05:59.593 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/Users/kyeong/dev/java/Grids-Circles-Clone-APIServer/backend/build/classes/java/main/com/example/gccoffee/GcCoffeeApplication.class]
12:05:59.594 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.example.gccoffee.GcCoffeeApplication for test class com.example.gccoffee.Service.OrderServiceImplTest
12:05:59.640 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.example.gccoffee.Service.OrderServiceImplTest]: using defaults.
12:05:59.640 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
12:05:59.648 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1e53135d, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7674a051, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3a7704c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6754ef00, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@619bd14c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@323e8306, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a23a01d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4acf72b6, org.springframework.test.context.event.EventPublishingTestExecutionListener@7561db12, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3301500b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@24b52d3e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@15deb1dc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6e9c413e, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@57a4d5ee, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5af5def9]
12:05:59.649 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.3)

2022-10-07 12:05:59.966  INFO 17348 --- [    Test worker] c.e.g.Service.OrderServiceImplTest       : Starting OrderServiceImplTest using Java 15.0.5 on igyeong-wons-MacBook-Pro.local with PID 17348 (started by kyeong in /Users/kyeong/dev/java/Grids-Circles-Clone-APIServer/backend)
2022-10-07 12:05:59.967  INFO 17348 --- [    Test worker] c.e.g.Service.OrderServiceImplTest       : No active profile set, falling back to 1 default profile: "default"
2022-10-07 12:06:00.412  INFO 17348 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-10-07 12:06:00.445  INFO 17348 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29 ms. Found 2 JPA repository interfaces.
2022-10-07 12:06:00.757  INFO 17348 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-10-07 12:06:00.788  INFO 17348 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
2022-10-07 12:06:00.863  INFO 17348 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-10-07 12:06:00.914  INFO 17348 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-10-07 12:06:01.167  INFO 17348 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-10-07 12:06:01.182  INFO 17348 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
Hibernate: alter table order_item drop foreign key FKt4dc2r9nbvbujrljv3e23iibt
Hibernate: alter table order_item drop foreign key FK551losx9j75ss5d6bfsqvijna
Hibernate: drop table if exists order_item
Hibernate: drop table if exists orders
Hibernate: drop table if exists product
Hibernate: create table order_item (order_item_id BINARY(16) not null, created_at datetime(6), updated_at datetime(6), count integer not null, order_price bigint not null, order_id BINARY(16), product_id BINARY(16), primary key (order_item_id)) engine=InnoDB
Hibernate: create table orders (id BINARY(16) not null, created_at datetime(6), updated_at datetime(6), address varchar(255), email varchar(255), order_status integer, postcode varchar(255), primary key (id)) engine=InnoDB
Hibernate: create table product (product_id BINARY(16) not null, created_at datetime(6), updated_at datetime(6), category integer, description BLOB, price bigint not null, product_name varchar(255), quantity integer not null, primary key (product_id)) engine=InnoDB
Hibernate: alter table order_item add constraint FKt4dc2r9nbvbujrljv3e23iibt foreign key (order_id) references orders (id)
Hibernate: alter table order_item add constraint FK551losx9j75ss5d6bfsqvijna foreign key (product_id) references product (product_id)
2022-10-07 12:06:01.616  INFO 17348 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-10-07 12:06:01.620  INFO 17348 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-10-07 12:06:01.972  INFO 17348 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@22a8e87b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b8c6406, org.springframework.security.web.context.SecurityContextPersistenceFilter@198a0416, org.springframework.security.web.header.HeaderWriterFilter@496004e3, org.springframework.security.web.authentication.logout.LogoutFilter@2cdd156b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1db565f2, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7db679, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@6bed434d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@723f8990, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3bdc8975, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13f10967, org.springframework.security.web.session.SessionManagementFilter@f31b991, org.springframework.security.web.access.ExceptionTranslationFilter@2dbc66f0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4769e70c]
2022-10-07 12:06:02.067  WARN 17348 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-10-07 12:06:02.178  INFO 17348 --- [    Test worker] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2022-10-07 12:06:02.360  INFO 17348 --- [    Test worker] c.e.g.Service.OrderServiceImplTest       : Started OrderServiceImplTest in 2.687 seconds (JVM running for 3.371)
2022-10-07 12:06:02.382  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@a47a011, testMethod = totalPriceTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@392af2e0]; rollback [false]
Hibernate: select product0_.product_id as product_1_2_, product0_.created_at as created_2_2_, product0_.updated_at as updated_3_2_, product0_.category as category4_2_, product0_.description as descript5_2_, product0_.price as price6_2_, product0_.product_name as product_7_2_, product0_.quantity as quantity8_2_ from product product0_ where product0_.product_name=?
Hibernate: update product set updated_at=?, category=?, description=?, price=?, product_name=?, quantity=? where product_id=?
Hibernate: SELECT * from ORDERS WHERE email = ? AND CREATED_AT BETWEEN DATE_SUB(DATE_FORMAT(?,'%Y-%m-%d 14:00:00'), INTERVAL 1 DAY) AND DATE_FORMAT(?,'%Y-%m-%d 14:00:00')
2022-10-07 12:06:02.568  INFO 17348 --- [    Test worker] c.e.gccoffee.Service.OrderServiceImpl    : New Order Created : Optional[com.example.gccoffee.model.Order@7a7d25ca]
Hibernate: insert into orders (created_at, updated_at, address, email, order_status, postcode, id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into order_item (created_at, updated_at, count, order_id, order_price, product_id, order_item_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: SELECT * from ORDERS WHERE email = ? AND CREATED_AT BETWEEN DATE_SUB(DATE_FORMAT(?,'%Y-%m-%d 14:00:00'), INTERVAL 1 DAY) AND DATE_FORMAT(?,'%Y-%m-%d 14:00:00')
2022-10-07 12:06:02.602  INFO 17348 --- [    Test worker] c.e.gccoffee.Service.OrderServiceImpl    : Order Already Exists : [OrderItem(id=9e8cde9c-742c-4eb4-a2f3-c84681a09e8c, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=1), order=com.example.gccoffee.model.Order@7a7d25ca, orderPrice=100, count=5), OrderItem(id=9e8cde9c-742c-4eb4-a2f3-c84681a09e8c, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=1), order=com.example.gccoffee.model.Order@7a7d25ca, orderPrice=100, count=5)]
Hibernate: select order0_.id as id1_1_, order0_.created_at as created_2_1_, order0_.updated_at as updated_3_1_, order0_.address as address4_1_, order0_.email as email5_1_, order0_.order_status as order_st6_1_, order0_.postcode as postcode7_1_ from orders order0_ where order0_.email=?
2022-10-07 12:06:02.617  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Committed transaction for test: [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@a47a011, testMethod = totalPriceTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-10-07 12:06:02.622  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@77c8b276, testMethod = orderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@392af2e0]; rollback [true]
Hibernate: select product0_.product_id as product_1_2_, product0_.created_at as created_2_2_, product0_.updated_at as updated_3_2_, product0_.category as category4_2_, product0_.description as descript5_2_, product0_.price as price6_2_, product0_.product_name as product_7_2_, product0_.quantity as quantity8_2_ from product product0_ where product0_.product_name=?
Hibernate: update product set updated_at=?, category=?, description=?, price=?, product_name=?, quantity=? where product_id=?
Hibernate: SELECT * from ORDERS WHERE email = ? AND CREATED_AT BETWEEN DATE_SUB(DATE_FORMAT(?,'%Y-%m-%d 14:00:00'), INTERVAL 1 DAY) AND DATE_FORMAT(?,'%Y-%m-%d 14:00:00')
Hibernate: select orderitems0_.order_id as order_id6_0_0_, orderitems0_.order_item_id as order_it1_0_0_, orderitems0_.order_item_id as order_it1_0_1_, orderitems0_.created_at as created_2_0_1_, orderitems0_.updated_at as updated_3_0_1_, orderitems0_.count as count4_0_1_, orderitems0_.order_id as order_id6_0_1_, orderitems0_.order_price as order_pr5_0_1_, orderitems0_.product_id as product_7_0_1_ from order_item orderitems0_ where orderitems0_.order_id=?
2022-10-07 12:06:02.629  INFO 17348 --- [    Test worker] c.e.gccoffee.Service.OrderServiceImpl    : Order Already Exists : [OrderItem(id=9e8cde9c-742c-4eb4-a2f3-c84681a09e8c, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@10395bc4, orderPrice=100, count=5), OrderItem(id=null, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@10395bc4, orderPrice=100, count=1)]
Hibernate: select order0_.id as id1_1_, order0_.created_at as created_2_1_, order0_.updated_at as updated_3_1_, order0_.address as address4_1_, order0_.email as email5_1_, order0_.order_status as order_st6_1_, order0_.postcode as postcode7_1_ from orders order0_
2022-10-07 12:06:02.664  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@77c8b276, testMethod = orderTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-10-07 12:06:02.665  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@57be0d93, testMethod = orderCancelTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@392af2e0]; rollback [true]
Hibernate: select product0_.product_id as product_1_2_, product0_.created_at as created_2_2_, product0_.updated_at as updated_3_2_, product0_.category as category4_2_, product0_.description as descript5_2_, product0_.price as price6_2_, product0_.product_name as product_7_2_, product0_.quantity as quantity8_2_ from product product0_ where product0_.product_name=?
Hibernate: update product set updated_at=?, category=?, description=?, price=?, product_name=?, quantity=? where product_id=?
Hibernate: SELECT * from ORDERS WHERE email = ? AND CREATED_AT BETWEEN DATE_SUB(DATE_FORMAT(?,'%Y-%m-%d 14:00:00'), INTERVAL 1 DAY) AND DATE_FORMAT(?,'%Y-%m-%d 14:00:00')
Hibernate: select orderitems0_.order_id as order_id6_0_0_, orderitems0_.order_item_id as order_it1_0_0_, orderitems0_.order_item_id as order_it1_0_1_, orderitems0_.created_at as created_2_0_1_, orderitems0_.updated_at as updated_3_0_1_, orderitems0_.count as count4_0_1_, orderitems0_.order_id as order_id6_0_1_, orderitems0_.order_price as order_pr5_0_1_, orderitems0_.product_id as product_7_0_1_ from order_item orderitems0_ where orderitems0_.order_id=?
2022-10-07 12:06:02.669  INFO 17348 --- [    Test worker] c.e.gccoffee.Service.OrderServiceImpl    : Order Already Exists : [OrderItem(id=9e8cde9c-742c-4eb4-a2f3-c84681a09e8c, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@318d69ea, orderPrice=100, count=5), OrderItem(id=null, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@318d69ea, orderPrice=100, count=1)]
Hibernate: insert into order_item (created_at, updated_at, count, order_id, order_price, product_id, order_item_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: update product set updated_at=?, category=?, description=?, price=?, product_name=?, quantity=? where product_id=?
Hibernate: update orders set updated_at=?, address=?, email=?, order_status=?, postcode=? where id=?
Hibernate: select order0_.id as id1_1_, order0_.created_at as created_2_1_, order0_.updated_at as updated_3_1_, order0_.address as address4_1_, order0_.email as email5_1_, order0_.order_status as order_st6_1_, order0_.postcode as postcode7_1_ from orders order0_ where order0_.email=?
2022-10-07 12:06:02.677  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@57be0d93, testMethod = orderCancelTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-10-07 12:06:02.679  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@21298c3a, testMethod = batchProcessing@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@392af2e0]; rollback [true]
Hibernate: select product0_.product_id as product_1_2_, product0_.created_at as created_2_2_, product0_.updated_at as updated_3_2_, product0_.category as category4_2_, product0_.description as descript5_2_, product0_.price as price6_2_, product0_.product_name as product_7_2_, product0_.quantity as quantity8_2_ from product product0_ where product0_.product_name=?
Hibernate: update product set updated_at=?, category=?, description=?, price=?, product_name=?, quantity=? where product_id=?
Hibernate: SELECT * from ORDERS WHERE email = ? AND CREATED_AT BETWEEN DATE_SUB(DATE_FORMAT(?,'%Y-%m-%d 14:00:00'), INTERVAL 1 DAY) AND DATE_FORMAT(?,'%Y-%m-%d 14:00:00')
Hibernate: select orderitems0_.order_id as order_id6_0_0_, orderitems0_.order_item_id as order_it1_0_0_, orderitems0_.order_item_id as order_it1_0_1_, orderitems0_.created_at as created_2_0_1_, orderitems0_.updated_at as updated_3_0_1_, orderitems0_.count as count4_0_1_, orderitems0_.order_id as order_id6_0_1_, orderitems0_.order_price as order_pr5_0_1_, orderitems0_.product_id as product_7_0_1_ from order_item orderitems0_ where orderitems0_.order_id=?
2022-10-07 12:06:02.683  INFO 17348 --- [    Test worker] c.e.gccoffee.Service.OrderServiceImpl    : Order Already Exists : [OrderItem(id=9e8cde9c-742c-4eb4-a2f3-c84681a09e8c, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=5), OrderItem(id=null, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=1)]
Hibernate: insert into order_item (created_at, updated_at, count, order_id, order_price, product_id, order_item_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: SELECT * from ORDERS WHERE email = ? AND CREATED_AT BETWEEN DATE_SUB(DATE_FORMAT(?,'%Y-%m-%d 14:00:00'), INTERVAL 1 DAY) AND DATE_FORMAT(?,'%Y-%m-%d 14:00:00')
2022-10-07 12:06:02.691  INFO 17348 --- [    Test worker] c.e.gccoffee.Service.OrderServiceImpl    : Order Already Exists : [OrderItem(id=9e8cde9c-742c-4eb4-a2f3-c84681a09e8c, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=5), OrderItem(id=5ce99849-f469-4aa8-86d7-93f55868e6ba, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=1), OrderItem(id=null, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=1)]
Hibernate: insert into order_item (created_at, updated_at, count, order_id, order_price, product_id, order_item_id) values (?, ?, ?, ?, ?, ?, ?)
Hibernate: SELECT * from ORDERS WHERE email = ? AND CREATED_AT BETWEEN DATE_SUB(DATE_FORMAT(?,'%Y-%m-%d 14:00:00'), INTERVAL 1 DAY) AND DATE_FORMAT(?,'%Y-%m-%d 14:00:00')
2022-10-07 12:06:02.695  INFO 17348 --- [    Test worker] c.e.gccoffee.Service.OrderServiceImpl    : Order Already Exists : [OrderItem(id=9e8cde9c-742c-4eb4-a2f3-c84681a09e8c, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=5), OrderItem(id=5ce99849-f469-4aa8-86d7-93f55868e6ba, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=1), OrderItem(id=14cfa0b0-e496-4576-845a-9f7485334a86, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=1), OrderItem(id=null, product=Product(productId=f9c2522a-45ec-11ed-9d89-2ba0a24d9a1f, productName=커피짱2, category=BEAN, description=이 콩은 두 번째로 맛있습니다., price=100, quantity=0), order=com.example.gccoffee.model.Order@4b90a402, orderPrice=100, count=1)]
Hibernate: select order0_.id as id1_1_, order0_.created_at as created_2_1_, order0_.updated_at as updated_3_1_, order0_.address as address4_1_, order0_.email as email5_1_, order0_.order_status as order_st6_1_, order0_.postcode as postcode7_1_ from orders order0_
2022-10-07 12:06:02.701  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@21298c3a, testMethod = batchProcessing@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-10-07 12:06:02.702  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@4a0161ee, testMethod = stockTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@392af2e0]; rollback [true]
Hibernate: select product0_.product_id as product_1_2_, product0_.created_at as created_2_2_, product0_.updated_at as updated_3_2_, product0_.category as category4_2_, product0_.description as descript5_2_, product0_.price as price6_2_, product0_.product_name as product_7_2_, product0_.quantity as quantity8_2_ from product product0_ where product0_.product_name=?
2022-10-07 12:06:02.705  INFO 17348 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@19868320 testClass = OrderServiceImplTest, testInstance = com.example.gccoffee.Service.OrderServiceImplTest@4a0161ee, testMethod = stockTest@OrderServiceImplTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@50b0bc4c testClass = OrderServiceImplTest, locations = '{}', classes = '{class com.example.gccoffee.GcCoffeeApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@72cf2de5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@502f1f4c, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4fbda97b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4879f0f2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@435871cb, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@42e25b0b], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>

{"ast":null,"code":"var _jsxFileName = \"/Users/kyeong/dev/java/Grids-Circles-Clone-APIServer/frontend/src/pages/order.js\",\n    _s = $RefreshSig$();\n\n// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { ProductList } from \"../components/ProductList\";\nimport { Summary } from \"../components/Summary\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Order() {\n  _s();\n\n  const [products, setProducts] = useState([{\n    productId: 'uuid-1',\n    productName: '콜롬비아 커피 1',\n    category: '커피빈',\n    price: 5000,\n    quantity: 300\n  }, {\n    productId: 'uuid-2',\n    productName: '콜롬비아 커피 2',\n    category: '커피빈',\n    price: 5000,\n    quantity: 300\n  }, {\n    productId: 'uuid-3',\n    productName: '콜롬비아 커피 3',\n    category: '커피빈',\n    price: 5000,\n    quantity: 300\n  }]);\n  const [items, setItems] = useState([]);\n\n  const handleAddClicked = productId => {\n    const product = products.find(v => v.productId === productId);\n    const found = items.find(v => v.productId === productId);\n    let updatedItems;\n\n    if (found) {\n      updatedItems = items.map(v => {\n        if (v.productId === productId) {\n          if (v.quantity - 1 < v.count) {\n            alert(\"선택된 양이 재고보다 많습니다.\");\n            return v;\n          } else {\n            return { ...v,\n              count: v.count + 1\n            };\n          }\n        } else {\n          return v;\n        }\n      });\n    } else {\n      updatedItems = [...items, { ...product,\n        count: 1\n      }];\n    }\n\n    setItems(updatedItems);\n  };\n\n  const handleRemoveClicked = productId => {\n    let flag = false;\n    const updatedItems = items.map((v, index) => {\n      if (v.productId === productId) {\n        //배열의 탐색 값이 선택한 값과 일치하면\n        if (v.count > 1) {\n          //선택된 상품의 개수가 0 초과인 경우\n          flag = true;\n          return { ...v,\n            count: v.count - 1\n          };\n        } else {\n          //선택된 상품의 개수가 0 이하인 경우\n          setItems(items.filter(p => p.productId !== productId));\n          return;\n        }\n      } else {\n        return v;\n      }\n    });\n\n    if (flag) {\n      setItems(updatedItems);\n    }\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/v1/products').then(v => setProducts(v.data));\n  }, []);\n\n  const handleOrderSubmit = order => {\n    if (items.length === 0) {\n      alert(\"아이템을 추가해 주세요!\");\n    } else {\n      axios.post('http://localhost:8080/api/v1/orders', {\n        email: order.email,\n        address: order.address,\n        postcode: order.postcode,\n        orderItems: items.map(v => ({\n          productId: v.productId,\n          category: v.category,\n          price: v.price,\n          quantity: v.count\n        }))\n      }).then(v => alert(\"주문이 정상적으로 접수되었습니다.\"), e => {\n        alert(\"서버 장애\");\n        console.error(e);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"(\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-8 mt-4 d-flex flex-column align-items-start p-3 pt-0\",\n          children: /*#__PURE__*/_jsxDEV(ProductList, {\n            products: products,\n            onAddClick: handleAddClicked,\n            onRemoveClick: handleRemoveClicked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 summary p-4\",\n          children: /*#__PURE__*/_jsxDEV(Summary, {\n            items: items,\n            onOrderSubmit: handleOrderSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), \")\"]\n  }, void 0, true);\n}\n\n_s(Order, \"zfuFtgCIgSWRZVT5hi2Uh0Baqtk=\");\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["ProductList","Summary","axios","React","useEffect","useState","Order","products","setProducts","productId","productName","category","price","quantity","items","setItems","handleAddClicked","product","find","v","found","updatedItems","map","count","alert","handleRemoveClicked","flag","index","filter","p","get","then","data","handleOrderSubmit","order","length","post","email","address","postcode","orderItems","e","console","error"],"sources":["/Users/kyeong/dev/java/Grids-Circles-Clone-APIServer/frontend/src/pages/order.js"],"sourcesContent":["// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {ProductList} from \"../components/ProductList\";\nimport {Summary} from \"../components/Summary\";\nimport axios from \"axios\";\nimport React, {useEffect, useState} from 'react';\n\n\nexport function Order() {\n    const [products, setProducts] = useState([\n        {productId: 'uuid-1', productName: '콜롬비아 커피 1', category: '커피빈', price: 5000, quantity: 300},\n        {productId: 'uuid-2', productName: '콜롬비아 커피 2', category: '커피빈', price: 5000, quantity: 300},\n        {productId: 'uuid-3', productName: '콜롬비아 커피 3', category: '커피빈', price: 5000, quantity: 300},\n\n    ]);\n    const [items, setItems] = useState([]);\n\n    const handleAddClicked = productId => {\n        const product = products.find(v => v.productId === productId);\n        const found = items.find(v => v.productId === productId);\n        let updatedItems;\n        if (found) {\n            updatedItems = items.map(v => {\n                if (v.productId === productId) {\n                    if (v.quantity-1 < v.count) {\n                        alert(\"선택된 양이 재고보다 많습니다.\")\n                        return v;\n                    } else {\n                        return {...v, count: v.count + 1};\n                    }\n                } else {\n                    return v;\n                }\n            });\n        }else{\n            updatedItems = [...items, {...product, count: 1}];\n        }\n        setItems(updatedItems);\n    };\n\n    const handleRemoveClicked = productId => {\n        let flag = false;\n        const updatedItems = items.map((v,index) => {\n            if (v.productId === productId) {//배열의 탐색 값이 선택한 값과 일치하면\n                if(v.count > 1) {//선택된 상품의 개수가 0 초과인 경우\n                    flag = true;\n                    return {...v, count: v.count -1}\n                }else{//선택된 상품의 개수가 0 이하인 경우\n                    setItems(items.filter((p) =>  p.productId !== productId ));\n                    return;\n                }\n            }else{\n                return v\n            }\n        });\n        if(flag){\n            setItems(updatedItems);\n        }\n    }\n\n    useEffect(() => {\n        axios.get('http://localhost:8080/api/v1/products')\n            .then(v => setProducts(v.data));\n    }, []);\n\n\n\n    const handleOrderSubmit = (order) => {\n        if (items.length === 0) {\n            alert(\"아이템을 추가해 주세요!\");\n        } else {\n            axios.post('http://localhost:8080/api/v1/orders', {\n                email: order.email,\n                address: order.address,\n                postcode: order.postcode,\n                orderItems: items.map(v => ({\n                    productId: v.productId,\n                    category: v.category,\n                    price: v.price,\n                    quantity: v.count\n                }))\n            }).then(\n                v => alert(\"주문이 정상적으로 접수되었습니다.\"),\n                e => {\n                    alert(\"서버 장애\");\n                    console.error(e);\n                })\n        }\n    }\n    return <>(\n        <div className=\"card\">\n            <div className=\"row\">\n                <div className=\"col-md-8 mt-4 d-flex flex-column align-items-start p-3 pt-0\">\n                    {/*<ProductList products={products} onAddClick={handleAddClicked} onRemoveClick={handleRemoveClicked}/>*/}\n                    <ProductList products={products} onAddClick={handleAddClicked} onRemoveClick={handleRemoveClicked}/>\n\n                </div>\n                <div className=\"col-md-4 summary p-4\">\n                    <Summary items={items} onOrderSubmit={handleOrderSubmit}/>\n                </div>\n            </div>\n        </div>\n        {/*</Link>*/}\n        )\n        </>\n}\n\nexport default Order;\n"],"mappings":";;;AAAA;AACA,OAAO,kCAAP;AACA,SAAQA,WAAR,QAA0B,2BAA1B;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAGA,OAAO,SAASC,KAAT,GAAiB;EAAA;;EACpB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,CACrC;IAACI,SAAS,EAAE,QAAZ;IAAsBC,WAAW,EAAE,WAAnC;IAAgDC,QAAQ,EAAE,KAA1D;IAAiEC,KAAK,EAAE,IAAxE;IAA8EC,QAAQ,EAAE;EAAxF,CADqC,EAErC;IAACJ,SAAS,EAAE,QAAZ;IAAsBC,WAAW,EAAE,WAAnC;IAAgDC,QAAQ,EAAE,KAA1D;IAAiEC,KAAK,EAAE,IAAxE;IAA8EC,QAAQ,EAAE;EAAxF,CAFqC,EAGrC;IAACJ,SAAS,EAAE,QAAZ;IAAsBC,WAAW,EAAE,WAAnC;IAAgDC,QAAQ,EAAE,KAA1D;IAAiEC,KAAK,EAAE,IAAxE;IAA8EC,QAAQ,EAAE;EAAxF,CAHqC,CAAD,CAAxC;EAMA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMW,gBAAgB,GAAGP,SAAS,IAAI;IAClC,MAAMQ,OAAO,GAAGV,QAAQ,CAACW,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACV,SAAF,KAAgBA,SAAnC,CAAhB;IACA,MAAMW,KAAK,GAAGN,KAAK,CAACI,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACV,SAAF,KAAgBA,SAAhC,CAAd;IACA,IAAIY,YAAJ;;IACA,IAAID,KAAJ,EAAW;MACPC,YAAY,GAAGP,KAAK,CAACQ,GAAN,CAAUH,CAAC,IAAI;QAC1B,IAAIA,CAAC,CAACV,SAAF,KAAgBA,SAApB,EAA+B;UAC3B,IAAIU,CAAC,CAACN,QAAF,GAAW,CAAX,GAAeM,CAAC,CAACI,KAArB,EAA4B;YACxBC,KAAK,CAAC,mBAAD,CAAL;YACA,OAAOL,CAAP;UACH,CAHD,MAGO;YACH,OAAO,EAAC,GAAGA,CAAJ;cAAOI,KAAK,EAAEJ,CAAC,CAACI,KAAF,GAAU;YAAxB,CAAP;UACH;QACJ,CAPD,MAOO;UACH,OAAOJ,CAAP;QACH;MACJ,CAXc,CAAf;IAYH,CAbD,MAaK;MACDE,YAAY,GAAG,CAAC,GAAGP,KAAJ,EAAW,EAAC,GAAGG,OAAJ;QAAaM,KAAK,EAAE;MAApB,CAAX,CAAf;IACH;;IACDR,QAAQ,CAACM,YAAD,CAAR;EACH,CArBD;;EAuBA,MAAMI,mBAAmB,GAAGhB,SAAS,IAAI;IACrC,IAAIiB,IAAI,GAAG,KAAX;IACA,MAAML,YAAY,GAAGP,KAAK,CAACQ,GAAN,CAAU,CAACH,CAAD,EAAGQ,KAAH,KAAa;MACxC,IAAIR,CAAC,CAACV,SAAF,KAAgBA,SAApB,EAA+B;QAAC;QAC5B,IAAGU,CAAC,CAACI,KAAF,GAAU,CAAb,EAAgB;UAAC;UACbG,IAAI,GAAG,IAAP;UACA,OAAO,EAAC,GAAGP,CAAJ;YAAOI,KAAK,EAAEJ,CAAC,CAACI,KAAF,GAAS;UAAvB,CAAP;QACH,CAHD,MAGK;UAAC;UACFR,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcC,CAAD,IAAQA,CAAC,CAACpB,SAAF,KAAgBA,SAArC,CAAD,CAAR;UACA;QACH;MACJ,CARD,MAQK;QACD,OAAOU,CAAP;MACH;IACJ,CAZoB,CAArB;;IAaA,IAAGO,IAAH,EAAQ;MACJX,QAAQ,CAACM,YAAD,CAAR;IACH;EACJ,CAlBD;;EAoBAjB,SAAS,CAAC,MAAM;IACZF,KAAK,CAAC4B,GAAN,CAAU,uCAAV,EACKC,IADL,CACUZ,CAAC,IAAIX,WAAW,CAACW,CAAC,CAACa,IAAH,CAD1B;EAEH,CAHQ,EAGN,EAHM,CAAT;;EAOA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;IACjC,IAAIpB,KAAK,CAACqB,MAAN,KAAiB,CAArB,EAAwB;MACpBX,KAAK,CAAC,eAAD,CAAL;IACH,CAFD,MAEO;MACHtB,KAAK,CAACkC,IAAN,CAAW,qCAAX,EAAkD;QAC9CC,KAAK,EAAEH,KAAK,CAACG,KADiC;QAE9CC,OAAO,EAAEJ,KAAK,CAACI,OAF+B;QAG9CC,QAAQ,EAAEL,KAAK,CAACK,QAH8B;QAI9CC,UAAU,EAAE1B,KAAK,CAACQ,GAAN,CAAUH,CAAC,KAAK;UACxBV,SAAS,EAAEU,CAAC,CAACV,SADW;UAExBE,QAAQ,EAAEQ,CAAC,CAACR,QAFY;UAGxBC,KAAK,EAAEO,CAAC,CAACP,KAHe;UAIxBC,QAAQ,EAAEM,CAAC,CAACI;QAJY,CAAL,CAAX;MAJkC,CAAlD,EAUGQ,IAVH,CAWIZ,CAAC,IAAIK,KAAK,CAAC,oBAAD,CAXd,EAYIiB,CAAC,IAAI;QACDjB,KAAK,CAAC,OAAD,CAAL;QACAkB,OAAO,CAACC,KAAR,CAAcF,CAAd;MACH,CAfL;IAgBH;EACJ,CArBD;;EAsBA,oBAAO;IAAA,6BACH;MAAK,SAAS,EAAC,MAAf;MAAA,uBACI;QAAK,SAAS,EAAC,KAAf;QAAA,wBACI;UAAK,SAAS,EAAC,6DAAf;UAAA,uBAEI,QAAC,WAAD;YAAa,QAAQ,EAAElC,QAAvB;YAAiC,UAAU,EAAES,gBAA7C;YAA+D,aAAa,EAAES;UAA9E;YAAA;YAAA;YAAA;UAAA;QAFJ;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAK,SAAS,EAAC,sBAAf;UAAA,uBACI,QAAC,OAAD;YAAS,KAAK,EAAEX,KAAhB;YAAuB,aAAa,EAAEmB;UAAtC;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADG;EAAA,gBAAP;AAgBH;;GAjGe3B,K;;KAAAA,K;AAmGhB,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}